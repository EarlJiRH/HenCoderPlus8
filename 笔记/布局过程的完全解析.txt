布局过程的完全解析

布局过程
确定每个View的位置和尺寸
布局
绘制:知道往哪里绘制
触摸反馈:知道用户点的是哪里

作用:为绘制和触摸范围做支持

流程
从整体看:
	测量流程:从根View递归调用每一级子View的measure()方法,对它们进行测量  //measure()总调度方法 
	布局流程:从根View递归调用每一级子View的layout()方法,把测量过程得出的子View的位置和尺寸传给子View,子View保存

分两个流程? 测量过程比较复杂,甚至某些子View需要进行多次测量

从个体看,对于每个View:
	1.运行前,开发者在xml文件里写入对View的布局要求layout_xxx
	2.父View在自己的onMeasure()中,根据开发者在xml中写的对子View的要求,和自己的可用空间,得出对于子View的具体尺寸要求 //onMeasure()进行实际操作
	3.子View在自己的onMeasure()中,根据父View的要求以及自己的特性算出自己的期望尺寸
		如果是ViewGroup,还会在这里调用每个子View的measure()进行测量

	4.父View在子View计算出期望尺寸后,得出子View的实际尺寸和位置
	5.子View在自己的layout()方法中,将父View传进来的自己的实际尺寸和位置保存
		如果是ViewGroup,还会在onLayout()中调用每个子View的layout()把它们的尺寸位置传给它们


自定义布局之尺寸自定义
自定义布局
继承已有的View,简单改写它们的尺寸:重写 onMeasure()
	SquareImageView
对自定义View完全进行自定义尺寸计算:重写 onMeasure()
	CircleView
自定义Layout:重写 onMeasure()和onLayout()
	TagLayout



简单改写已有View的尺寸
	重写onMeasure()
	用getMeasuredWidth()和getMeasuredHeight()获取到测量出的尺寸
	计算出最终要的尺寸
	用setMeasuredDimension(width,height)把结果保存


完全自定义View的尺寸
	重写onMeasure()
	计算出自己的尺寸
	用resolveSize()或者resolveSizeAndState()修正结果
	使用setMeasuredDimension(width,height)保存结果


自定义Layout
	重写onMeasure()
		遍历每个子View,测量子View
			测量完成后,得出子View的实际位置和尺寸,并暂时保存
			有些子View可能需要重新测量
		测量出所有子View的位置和尺寸后,计算出自己的尺寸,并用setMeasuredDimension(width,height)保存
	重写onLayout()
		遍历每个子View,调用它们的layout()方法来将位置和尺寸传给它们