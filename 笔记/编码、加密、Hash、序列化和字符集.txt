密码学
起源:古代战争(古典密码学)
移位式加密:密码棒
  加密算法:缠绕木棒后书写
  秘钥:木棒的尺寸规格

替换式加密
  加密算法:替换文字
  秘钥:码表


现代密码学
不止可以用于文字内容，还可以用于各种二进制数据

对称加密
原理:使用秘钥和加密算法对数据进行转换，得到无意义数据即为密文;使用秘钥和解密算法对密文进行逆向转换，得到原数据(相同的秘钥，不同的算法)
经典算法:DES(56),AES(128,192,256)
中间人攻击(传输秘钥)


非对称加密
原理:使用公钥对数据进行加密得到密文,使用私钥对数据进行解密得到原数据(相同的算法，不同的秘钥)
一套秘钥只能单向通信(发送方只负责加密，无法解密自己加密的消息)
延伸用途:数字签名

经典算法:椭圆算法 RSA算法(加密和签名) DSA(只用于签名)



数字签名
使用私钥对数据进行加密得到密文,使用公钥对数据进行解密得到原数据(公钥、私钥不能互调)

签名与验证


密码学密钥和登录密码(无关联)
密钥(key)
	场景:用于加密和解密
	目的:保证数据被盗时不会被人读取内容
	焦点:数据
登录密码(password)
	场景:用户进入网站或者游戏前的身份验证
	目的:数据提供方法或应用服务对账户拥有者数据的保护，保证[你是你]的时候才提供权限
	焦点:身份


Base64
将二进制数据转换成64个字符组成的字符串的编码算法
什么是二进制数据?(狭义 非文本数据)

用途:
 让原数据具有字符串所具有的特性,如可以放在URL中传输、可以保存到文本文件、可以通过普通的聊天软件进行文本传输
 把原本人眼可以读懂的字符串变成读不懂的字符串，降低偷窥风险

 变种:Base58 (O 0 L l + /)


URL encoding
将 URL 中的保留字符使用百分号 "%" 进行编码
目的:消除歧义,避免解析错误


压缩与解压缩(编码:固定的算法将A格式转换成B格式,并且可以转换回来,没有数据损失)

压缩:把数据换一种方式来存储,以减小存储空间
解压缩:把压缩后的数据还原成原先的形式,以便使用
常见压缩算法:DEFLATE(zip归档)、JPEG、MP3


媒体数据的编解码(音视频、图片等)
图片的编码:把图像数据写成JPG、PNG等文件的编码格式
图片的解码:把JPG、PNG等文件中的数据解析成标准的图像数据

无损压缩 有损压缩(不可逆)


序列化(非编码,格式未发生转换)
序列化:把数据对象(一般是内存中的，例如JVM中的对象)转换成字节序列的过程——连续的
反序列化:把字节序列重新转换成内存中的对象
目的:让内存中的对象可以被存储和传输
格式:Json


Hash(不可逆,非编码,非加密)
定义:把任意数据转换成指定大小范围(通常很小)的数据
作用:摘要、数字指纹
经典算法:MD5、SHA1、SHA256等
要求:碰撞率低、防破解

实际用途
	数据完整性验证
	快速查找:hashCode()和hashMap  重写equals()和hashCode()方法,初步判断相等是hashCode()方法
	隐私保护

彩虹表
SHA1(111111) == ksjlkj
SHA1(123456) == awefid
SHA1(888888) == mcv82k

加盐(hash前对数据进行拼接一节后再进行hash)


字符集
含义:一个有整数向现实世界中的文字符号的映射 Map
分支:
	ASCII:128个字符,1字节
	ISO-8859-1:对ASCII进行扩充 256个字符,1字节
	Unicode:13万个字符,多字节
		UTF-8:Unicode的编码分支
		UTF-16:Unicode的编码分支
	GBK/GB2312/GB18030:中国自研标准,多字节,字符集+编码
